<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="utf-8" />
  <meta name="viewport" content="width=device-width,initial-scale=1" />
  <title>Vault Content - Password Protected</title>
  <link rel="stylesheet" href="../../style.css">
  <style>
    /* ===== Vault - Password Protected Theme ===== */
    body {
      background: #060b0b;
      color: #cffef6;
      font-family: "Segoe UI", Roboto, "Courier New", monospace;
    }

    /* Boot / initializing overlay */
    .boot-screen {
      position: fixed; inset:0;
      display:flex; align-items:center; justify-content:center;
      background: radial-gradient(circle at center, #001210 0%, #000 100%);
      color: #7ff8ee; font-size: 1.25rem; letter-spacing: 1px;
      z-index: 9999;
      flex-direction: column;
    }
    .boot-lines { max-width: 780px; text-align:left; font-family: monospace; line-height:1.6; padding: 0 20px; }
    .boot-bar { width: 320px; height:10px; background:#001315; border-radius:6px; overflow:hidden; margin-top:18px; }
    .boot-fill { height:100%; width:0%; background:linear-gradient(90deg,#30D5C8,#00fff2); transition: width 0.4s ease; }

    /* Page container (content fades in after boot) */
    .vault-container { max-width:1200px; margin:110px auto 60px; padding:0 20px; opacity:0; }

    .vault-header h2 { color:#30D5C8; margin-bottom:6px; }
    .vault-header p { color:#a8cfc9; margin-bottom:20px; }

    .vault-grid {
      display:grid;
      grid-template-columns: repeat(auto-fit, minmax(280px,1fr));
      gap:22px;
      margin-top:18px;
    }

    .project-card {
      background: linear-gradient(180deg, rgba(4,12,12,0.75), rgba(2,7,7,0.9));
      border: 1px solid rgba(48,213,200,0.12);
      border-radius:12px;
      padding:18px;
      position:relative;
      overflow:hidden;
      cursor:pointer;
      transition: transform .25s ease, box-shadow .25s ease;
      min-height:130px;
    }
    .project-card:hover {
      transform: translateY(-6px);
      box-shadow: 0 6px 30px rgba(0,255,220,0.06);
    }
    .project-title { color:#30D5C8; font-weight:700; margin-bottom:8px; font-size:1.05rem; }
    .project-teaser { color:#b7dcd6; font-size:0.95rem; line-height:1.4; filter: blur(2px); transition:filter .35s ease; min-height:56px;}
    .project-card:hover .project-teaser { filter:none; }

    .project-meta { margin-top:12px; display:flex; gap:10px; align-items:center; justify-content:space-between; }
    .enter-btn {
      background:#30D5C8; color:#001010; border:none; padding:8px 12px; border-radius:8px; cursor:pointer; font-weight:600;
    }
    .enter-btn[disabled]{ background:#445; color:#888; cursor:not-allowed; }

    .project-lock { color:#f38b8b; font-size:0.88rem; }

    /* scan glow for visual motion on cards */
    .project-card::after {
      content:"";
      position:absolute;
      top:-70%; left:-50%; width:200%; height:200%;
      background:linear-gradient(120deg, transparent, rgba(48,213,200,0.08), transparent);
      transform: rotate(25deg);
      animation: cardScan 6.5s linear infinite;
      pointer-events:none;
    }
    @keyframes cardScan {
      0% { transform: translateY(-150%) rotate(25deg); opacity:0; }
      15% { opacity:0.55; }
      45% { opacity:0; }
      100% { transform: translateY(150%) rotate(25deg); opacity:0; }
    }

    /* ACCESS overlay shown after correct password */
    .access-overlay {
      position:fixed; inset:0; display:flex; align-items:center; justify-content:center;
      background:rgba(0,0,0,0.92); color:#00ffd9; font-family:monospace; font-size:1.25rem;
      z-index:10000; flex-direction:column; gap:10px; opacity:0; pointer-events:none; transition:opacity .25s;
    }
    .access-overlay.active { opacity:1; pointer-events:auto; }

    /* modal for password */
    .modal-backdrop { position:fixed; inset:0; background:rgba(0,0,0,0.6); display:flex; align-items:center; justify-content:center; z-index:10001; }
    .modal {
      background:#021515; border:1px solid rgba(48,213,200,0.14); padding:18px; border-radius:10px; width:min(520px,92%);
      color:#dffbf6; font-family:inherit;
    }
    .modal h4 { color:#30D5C8; margin-bottom:10px; }
    .modal .row { display:flex; gap:8px; margin-top:8px; }
    .modal input[type="password"] { flex:1; padding:8px 10px; border-radius:6px; border:1px solid rgba(255,255,255,0.06); background:#031212; color:#dffbf6; }
    .modal .btn { background:#30D5C8; color:#001010; border:none; padding:8px 12px; border-radius:6px; cursor:pointer; font-weight:600; }
    .modal .btn.secondary { background:transparent; color:#a6e8df; border:1px solid rgba(255,255,255,0.04); }

    /* small hint in footer area (keeps site design) */
    footer { margin-top:60px; border-top:1px solid rgba(48,213,200,0.06); color:#9fcfc4; padding:18px 0; text-align:center; }

    /* responsive tweaks */
    @media (max-width:640px){
      .boot-lines { font-size:0.92rem; }
      .project-card { padding:14px; }
    }
  </style>
</head>
<body>

  <!-- BOOT overlay -->
  <div class="boot-screen" id="bootScreen" aria-hidden="false">
    <div class="boot-lines" id="bootLines">
      <!-- lines inserted by JS -->
    </div>
    <div class="boot-bar"><div class="boot-fill" id="bootFill"></div></div>
  </div>

  <!-- SITE HEADER (kept standard) -->
  <header class="site-header" id="mainHeader">
    <div class="header-content">
      <div class="logo-title">
        <img src="../../images/siteimages/FMLOGO.bmp" alt="Fatih Meclis Logo" />
        <div class="site-info">
          <h1>Fatih Meclis</h1>
          <p>Personal Website & Engineering Portfolio</p>
        </div>
      </div>
      <nav class="navbar">
        <ul>
          <li><a href="../../index.html">HOME</a></li>
		  <li><a href="../../pages/photos/photos.htm">PHOTOS</a></li>
		  <li><a href="../../pages/myworks/myworks.htm">MY WORKS</a></li>
          <li><a href="../../pages/special/projectvault.htm" class="vault-link" target="_blank">ðŸ”’ VAULT</a></li>          
          <li><a href="../../pages/aboutme/aboutme.htm">ABOUT ME</a></li>
          <li><a href="../../pages/blog/blog.htm">BLOG</a></li>
          <li><a href="../../pages/contact/contact.htm">CONTACT</a></li>
          
                   
        </ul>
      </nav>
    </div>
  </header>

  <!-- MAIN VAULT CONTENT -->
  <main class="vault-container" id="vaultContainer" aria-hidden="true">
    <section class="vault-header">
      <h2>PROJECT VAULT</h2>
      <p>Authorized access only â€” select a project to request entry.</p>
    </section>

    <section class="vault-grid" id="vaultGrid">
      <!-- JS will populate project cards here -->
    </section>
  </main>

  <!-- ACCESS overlay -->
  <div class="access-overlay" id="accessOverlay" aria-hidden="true">
    <div id="accessMsg" style="font-weight:700; letter-spacing:1px;">ACCESS GRANTED â€” INITIALIZING SECURE CHANNEL...</div>
    <div id="accessSub" style="color:#9feee3; font-size:0.95rem;">Please wait â€” redirecting.</div>
  </div>

  <!-- PASSWORD MODAL (hidden initially) -->
  <div id="pwdModal" style="display:none;" role="dialog" aria-modal="true">
    <div class="modal-backdrop" id="modalBackdrop">
      <div class="modal" id="modalBox">
        <h4 id="modalTitle">Enter access code</h4>
        <div style="color:#b7e9e0; font-size:0.95rem;" id="modalDesc">Project: â€”</div>

        <div class="row" style="margin-top:12px;">
          <input id="pwdInput" type="password" placeholder="Access code">
          <button class="btn" id="pwdSubmit">Submit</button>
          <button class="btn secondary" id="pwdCancel">Cancel</button>
        </div>

        <div style="margin-top:10px; color:#f7bdbd; font-size:0.9rem;" id="modalStatus"></div>
      </div>
    </div>
  </div>

  <footer>
    <p>&copy; 2025 Fatih Meclis. Restricted Access Area.</p>
  </footer>

  <script>
  /********** CONFIG **********/
  const PROJECTS = [
    { id:'p1', title:'Energy Consumption Dashboard', teaser:'Household & small business energy usage analytics.', redirect:'energy.html', password:'231' },
    { id:'p2', title:'Project Alpha', teaser:'Project management and reporting for internal teams.', redirect:'projects/alpha/index.html', password:'alpha-secret' },
    { id:'p3', title:'Project Beta', teaser:'Field engineering logs and daily reports.', redirect:'projects/beta/index.html', password:'beta2025' },
    { id:'p4', title:'Thermal Efficiency Analyzer', teaser:'Industrial energy efficiency dashboards.', redirect:'projects/efficiency/index.html', password:'thermalX' },
    { id:'p5', title:'Structural Load Calculator', teaser:'Static load calculators and templates.', redirect:'projects/loadcalc/index.html', password:'struct2025' },
    { id:'p6', title:'Research Archive', teaser:'Technical reports, field notes and references.', redirect:'projects/archive/index.html', password:'archiveFM' }
  ];
  const MAX_ATTEMPTS = 5;

  /********** BOOT SEQUENCE (visual) **********/
  const bootLines = [
    'BOOT SEQUENCE 0xAF... OK',
    'SECURITY MODULE LOADING... OK',
    'VAULT INTERFACE INITIALIZING... OK',
    'SCANNING INTEGRITY CHECKS... OK',
    'SECURE CHANNELS STANDBY... OK',
    'SYSTEM READY. WELCOME.'
  ];
  const bootLinesTarget = document.getElementById('bootLines');
  const bootFill = document.getElementById('bootFill');
  let bootIdx = 0;

  function runBoot() {
    function step() {
      if (bootIdx >= bootLines.length) {
        document.getElementById('bootScreen').style.transition = 'opacity 0.6s ease';
        document.getElementById('bootScreen').style.opacity = '0';
        setTimeout(()=> {
          document.getElementById('bootScreen').style.display = 'none';
          document.getElementById('vaultContainer').style.opacity = '1';
          document.getElementById('vaultContainer').setAttribute('aria-hidden','false');
        }, 650);
        return;
      }
      const line = document.createElement('div');
      line.textContent = bootLines[bootIdx];
      bootLinesTarget.appendChild(line);
      bootIdx++;
      bootFill.style.width = Math.round((bootIdx / bootLines.length) * 100) + '%';
      setTimeout(step, 500);
    }
    step();
  }

  /********** RENDER PROJECT CARDS **********/
  const vaultGrid = document.getElementById('vaultGrid');
  function loadAttempts(projId) {
    const obj = JSON.parse(localStorage.getItem('vaultAttempts') || '{}');
    return obj[projId] || 0;
  }
  function saveAttempts(projId, count) {
    const obj = JSON.parse(localStorage.getItem('vaultAttempts') || '{}');
    obj[projId] = count;
    localStorage.setItem('vaultAttempts', JSON.stringify(obj));
  }
  function logAccess(projId, code, success) {
    const log = JSON.parse(localStorage.getItem('vaultLog') || '[]');
    log.push({project:projId, time:new Date().toISOString(), codeAttempt:code, success:!!success});
    localStorage.setItem('vaultLog', JSON.stringify(log));
  }

  function createCard(p) {
    const attempts = loadAttempts(p.id);
    const locked = attempts >= MAX_ATTEMPTS;
    const card = document.createElement('div');
    card.className = 'project-card';
    card.id = p.id;
    card.innerHTML = `
      <div class="project-title">${p.title}</div>
      <div class="project-teaser">${p.teaser}</div>
      <div class="project-meta">
        <div class="project-lock">${locked ? 'Locked' : ''}</div>
        <div>
          <button class="enter-btn" ${locked? 'disabled' : ''} data-proj="${p.id}">Enter</button>
        </div>
      </div>
    `;
    vaultGrid.appendChild(card);
  }

  PROJECTS.forEach(createCard);

  /********** MODAL HANDLING **********/
  const pwdModal = document.getElementById('pwdModal');
  const modalTitle = document.getElementById('modalTitle');
  const modalDesc = document.getElementById('modalDesc');
  const pwdInput = document.getElementById('pwdInput');
  const pwdSubmit = document.getElementById('pwdSubmit');
  const pwdCancel = document.getElementById('pwdCancel');
  const modalStatus = document.getElementById('modalStatus');
  let activeProject = null;

  document.querySelectorAll('.enter-btn').forEach(btn => {
    btn.addEventListener('click', (e) => {
      const pid = e.currentTarget.dataset.proj;
      openModal(pid);
    });
  });

  function openModal(projId) {
    activeProject = PROJECTS.find(x=>x.id===projId);
    modalTitle.textContent = `Enter access code`;
    modalDesc.textContent = `Project: ${activeProject.title}`;
    modalStatus.textContent = '';
    pwdInput.value = '';
    pwdModal.style.display = 'block';
    pwdInput.focus();
  }
  function closeModal() {
    activeProject = null;
    pwdModal.style.display = 'none';
  }

  pwdCancel.addEventListener('click', closeModal);

  pwdSubmit.addEventListener('click', () => {
    if (!activeProject) return;
    const code = pwdInput.value.trim();
    if (!code) { modalStatus.textContent = 'Please enter a code.'; return; }

    if (code === activeProject.password) {
      logAccess(activeProject.id, code, true);
      showAccessOverlay(activeProject);
      closeModal();
    } else {
      logAccess(activeProject.id, code, false);
      let attempts = loadAttempts(activeProject.id) + 1;
      saveAttempts(activeProject.id, attempts);
      modalStatus.textContent = `Access denied. (${attempts} failed attempt(s))`;
      const cardLock = document.querySelector(`#${activeProject.id} .project-lock`);
      const btn = document.querySelector(`#${activeProject.id} .enter-btn`);
      if (attempts >= MAX_ATTEMPTS) {
        cardLock.textContent = 'Locked';
        btn.disabled = true;
        modalStatus.textContent = 'Too many failed attempts â€” project temporarily locked.';
      }
    }
  });

  pwdInput.addEventListener('keydown', (ev) => {
    if (ev.key === 'Enter') pwdSubmit.click();
    if (ev.key === 'Escape') pwdCancel.click();
  });

  /********** ACCESS OVERLAY **********/
  const accessOverlay = document.getElementById('accessOverlay');
  const accessMsg = document.getElementById('accessMsg');
  const accessSub = document.getElementById('accessSub');

  function showAccessOverlay(project) {
    accessMsg.textContent = 'ACCESS GRANTED â€” INITIALIZING SECURE CHANNEL...';
    accessSub.textContent = `Establishing secure connection to ${project.title}...`;
    accessOverlay.classList.add('active');

    const steps = [
      {delay:700, text:'Authenticating session...'},
      {delay:700, text:'Negotiating secure channel...'},
      {delay:900, text:'Finalizing environment...'}
    ];
    let idx=0;
    const t = setInterval(()=>{
      if (idx < steps.length) {
        accessSub.textContent = steps[idx].text;
        idx++;
      } else {
        clearInterval(t);
        setTimeout(()=> {
          accessOverlay.classList.remove('active');
          // redirect logic
          if (project.id === 'p1') {
            window.location.href = project.redirect;
          } else {
            alert(`Access granted to ${project.title}\nModule under construction â€” returning to Vault Interface.`);
            // kÃ¼Ã§Ã¼k gecikmeyle geri dÃ¶nÃ¼ÅŸ efekti
            setTimeout(()=> {
              accessOverlay.classList.remove('active');
            }, 500);
          }
        }, 500);
      }
    }, steps[0].delay);
  }

  /********** ADMIN HELPERS **********/
  window.vaultAdmin = {
    getLog: () => JSON.parse(localStorage.getItem('vaultLog') || '[]'),
    clearLog: () => { localStorage.removeItem('vaultLog'); localStorage.removeItem('vaultAttempts'); alert('Vault logs & attempts cleared'); location.reload(); },
    showAttempts: () => JSON.parse(localStorage.getItem('vaultAttempts') || '{}')
  };

  /********** START BOOT ON LOAD **********/
  window.addEventListener('load', () => {
    runBoot();
    setTimeout(() => {
      PROJECTS.forEach(p=>{
        const attempts = loadAttempts(p.id);
        if (attempts >= MAX_ATTEMPTS) {
          const lockEl = document.querySelector(`#${p.id} .project-lock`);
          const btn = document.querySelector(`#${p.id} .enter-btn`);
          if (lockEl) lockEl.textContent = 'Locked';
          if (btn) btn.disabled = true;
        }
      });
    }, 1600);
  });
</script>

</body>
</html>
